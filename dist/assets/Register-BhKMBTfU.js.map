{"version":3,"file":"Register-BhKMBTfU.js","sources":["../../src/pages/Register.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport {\n  Container,\n  Paper,\n  Typography,\n  TextField,\n  Button,\n  Box,\n} from '@mui/material';\nimport { setUser } from '../features/userSlice';\n\nconst Register = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const handleNavigate = (path: string) => {\n    const trimmedPath = path.replace(/^\\//, '');\n    navigate(trimmedPath ? `/${trimmedPath}` : '/');\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      alert('Пароли не совпадают');\n      return;\n    }\n    // В реальном приложении здесь был бы запрос к API\n    dispatch(setUser({\n      id: '1',\n      username: username,\n      email: email,\n      level: 1,\n      experience: 0,\n      achievements: []\n    }));\n    handleNavigate('/courses');\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box sx={{ mt: 8 }}>\n        <Paper sx={{ p: 4 }}>\n          <Typography variant=\"h4\" component=\"h1\" gutterBottom align=\"center\">\n            Регистрация\n          </Typography>\n          <form onSubmit={handleSubmit}>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"username\"\n              label=\"Имя пользователя\"\n              name=\"username\"\n              autoComplete=\"username\"\n              autoFocus\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email\"\n              name=\"email\"\n              autoComplete=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Пароль\"\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"confirmPassword\"\n              label=\"Подтвердите пароль\"\n              type=\"password\"\n              id=\"confirmPassword\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Зарегистрироваться\n            </Button>\n            <Button\n              fullWidth\n              variant=\"text\"\n              onClick={() => handleNavigate('/login')}\n            >\n              Уже есть аккаунт? Войдите\n            </Button>\n          </form>\n        </Paper>\n      </Box>\n    </Container>\n  );\n};\n\nexport default Register; "],"names":["Register","navigate","useNavigate","dispatch","useDispatch","username","setUsername","useState","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","handleNavigate","path","trimmedPath","handleSubmit","setUser","Container","jsx","Box","jsxs","Paper","Typography","TextField","Button"],"mappings":"0NAaA,MAAMA,EAAW,IAAM,CACrB,MAAMC,EAAWC,EAAY,EACvBC,EAAWC,EAAY,EACvB,CAACC,EAAUC,CAAW,EAAIC,EAAAA,SAAS,EAAE,EACrC,CAACC,EAAOC,CAAQ,EAAIF,EAAAA,SAAS,EAAE,EAC/B,CAACG,EAAUC,CAAW,EAAIJ,EAAAA,SAAS,EAAE,EACrC,CAACK,EAAiBC,CAAkB,EAAIN,EAAAA,SAAS,EAAE,EAEnDO,EAAkBC,GAAiB,CACvC,MAAMC,EAAcD,EAAK,QAAQ,MAAO,EAAE,EAC1Cd,EAASe,EAAc,IAAIA,CAAW,GAAK,GAAG,CAChD,EAEMC,EAAgB,GAAuB,CAE3C,GADA,EAAE,eAAe,EACbP,IAAaE,EAAiB,CAChC,MAAM,qBAAqB,EAC3B,MAAA,CAGFT,EAASe,EAAQ,CACf,GAAI,IACJ,SAAAb,EACA,MAAAG,EACA,MAAO,EACP,WAAY,EACZ,aAAc,CAAA,CAAC,CAChB,CAAC,EACFM,EAAe,UAAU,CAC3B,EAEA,aACGK,EAAU,CAAA,SAAS,KAClB,SAAAC,EAAA,IAACC,GAAI,GAAI,CAAE,GAAI,GACb,SAACC,EAAAA,KAAAC,EAAA,CAAM,GAAI,CAAE,EAAG,CACd,EAAA,SAAA,CAACH,EAAAA,IAAAI,EAAA,CAAW,QAAQ,KAAK,UAAU,KAAK,aAAY,GAAC,MAAM,SAAS,SAEpE,aAAA,CAAA,EACAF,EAAAA,KAAC,OAAK,CAAA,SAAUL,EACd,SAAA,CAAAG,EAAA,IAACK,EAAA,CACC,OAAO,SACP,SAAQ,GACR,UAAS,GACT,GAAG,WACH,MAAM,mBACN,KAAK,WACL,aAAa,WACb,UAAS,GACT,MAAOpB,EACP,SAAW,GAAMC,EAAY,EAAE,OAAO,KAAK,CAAA,CAC7C,EACAc,EAAA,IAACK,EAAA,CACC,OAAO,SACP,SAAQ,GACR,UAAS,GACT,GAAG,QACH,MAAM,QACN,KAAK,QACL,aAAa,QACb,MAAOjB,EACP,SAAW,GAAMC,EAAS,EAAE,OAAO,KAAK,CAAA,CAC1C,EACAW,EAAA,IAACK,EAAA,CACC,OAAO,SACP,SAAQ,GACR,UAAS,GACT,KAAK,WACL,MAAM,SACN,KAAK,WACL,GAAG,WACH,MAAOf,EACP,SAAW,GAAMC,EAAY,EAAE,OAAO,KAAK,CAAA,CAC7C,EACAS,EAAA,IAACK,EAAA,CACC,OAAO,SACP,SAAQ,GACR,UAAS,GACT,KAAK,kBACL,MAAM,qBACN,KAAK,WACL,GAAG,kBACH,MAAOb,EACP,SAAW,GAAMC,EAAmB,EAAE,OAAO,KAAK,CAAA,CACpD,EACAO,EAAA,IAACM,EAAA,CACC,KAAK,SACL,UAAS,GACT,QAAQ,YACR,GAAI,CAAE,GAAI,EAAG,GAAI,CAAE,EACpB,SAAA,oBAAA,CAED,EACAN,EAAA,IAACM,EAAA,CACC,UAAS,GACT,QAAQ,OACR,QAAS,IAAMZ,EAAe,QAAQ,EACvC,SAAA,2BAAA,CAAA,CAED,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EACF,CAEJ"}